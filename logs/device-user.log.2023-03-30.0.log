2023-03-30 16:00:30.289 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:00:31.981 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:00:33.274 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 16:00:34.087 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:00:34.090 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:00:34.149 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44ms. Found 0 Redis repository interfaces.
2023-03-30 16:00:34.223 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:00:34.388 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:00:34.462 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$f7128ac7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:00:34.525 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:00:34.697 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:00:34.902 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:00:34.911 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:00:34.911 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:00:34.911 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:00:35.011 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:00:35.011 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1723 ms
2023-03-30 16:00:35.093 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:00:35.094 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:00:35.100 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@72543547
2023-03-30 16:00:35.204 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:00:40.244 [main] ERROR com.alibaba.druid.pool.DruidDataSource - init datasource error, url: jdbc:mysql://device.misaki.world:3306/device_test?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
java.sql.SQLNonTransientConnectionException: Data source rejected establishment of connection,  message from server: "Too many connections"
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:927)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1922)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1864)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1503)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1467)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1386)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1245)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:228)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:617)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1242)
	at org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration.healthContributorRegistry(HealthEndpointConfiguration.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:143)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:133)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:122)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:116)
	at org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at center.misaki.device.userApp.main(userApp.java:23)
2023-03-30 16:00:40.265 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:00:41.571 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:00:42.980 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:00:43.783 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c60c08, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f6f0fe2, org.springframework.security.web.header.HeaderWriterFilter@3ec7eb5, org.springframework.security.web.authentication.logout.LogoutFilter@47b961e2, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@5bf523e3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@83e635f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ab2009f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2cdb5974, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1cb44a2f, org.springframework.security.web.session.SessionManagementFilter@6ad112de, org.springframework.security.web.access.ExceptionTranslationFilter@4c13ca07, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77f4038c]
2023-03-30 16:00:43.794 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@61836cd9, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b632442, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f552aa2, org.springframework.security.web.header.HeaderWriterFilter@131d977f, org.springframework.security.web.authentication.logout.LogoutFilter@38cf4497, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@30bbe83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c8fe8ad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43d6262c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7227926b, org.springframework.security.web.session.SessionManagementFilter@616f81b5, org.springframework.security.web.access.ExceptionTranslationFilter@197d5a87, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2dde0a34]
2023-03-30 16:00:43.804 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7598d675, org.springframework.security.web.context.SecurityContextPersistenceFilter@71beada8, org.springframework.security.web.header.HeaderWriterFilter@42cfd794, org.springframework.security.web.csrf.CsrfFilter@4b8a0d03, org.springframework.security.web.authentication.logout.LogoutFilter@290807e5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2b9ecd05, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@54286339, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4946485c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2833c093, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@17f41739, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b3b1124, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ae958b0, org.springframework.security.web.session.SessionManagementFilter@43778371, org.springframework.security.web.access.ExceptionTranslationFilter@d6d683e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2a2798a2]
2023-03-30 16:00:43.935 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:00:43.935 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:00:44.102 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:00:45.913 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:00:47.087 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:00:47.115 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:00:47.161 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:00:47.176 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:00:47.252 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:00:47.277 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:00:47.391 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:00:47.392 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:00:47.468 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:00:47.469 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:00:47.568 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:00:47.688 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:00:47.688 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:00:47.688 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:00:47.688 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:00:47.689 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:00:47.689 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:00:47.689 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:00:47.790 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:00:47.791 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:00:47.792 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:00:47.795 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680163247794 with initial instances count: 1
2023-03-30 16:00:47.798 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:00:47.799 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163247799, current=UP, previous=STARTING]
2023-03-30 16:00:47.800 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:00:47.812 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:00:47.822 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:00:47.822 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-03-30 16:00:47.825 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-974861985] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2813)
2023-03-30 16:00:47.826 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-974861985] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:2913)
2023-03-30 16:00:47.826 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.Inet6AddressImpl.getHostByAddr(Native Method)
 java.net.InetAddress$2.getHostByAddr(InetAddress.java:870)
 java.net.InetAddress.getHostFromNameService(InetAddress.java:620)
 java.net.InetAddress.getHostName(InetAddress.java:562)
 java.net.InetAddress.getHostName(InetAddress.java:534)
 org.springframework.cloud.commons.util.InetUtils$$Lambda$80/1443435931.call(Unknown Source)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-03-30 16:00:47.826 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:256)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:750)
2023-03-30 16:00:47.827 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8001"]
2023-03-30 16:00:47.827 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8001"]
2023-03-30 16:00:47.829 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-03-30 16:00:47.830 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application AUTH-CENTER with eureka with status DOWN
2023-03-30 16:00:47.830 [main] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163247830, current=DOWN, previous=UP]
2023-03-30 16:00:47.832 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-03-30 16:00:47.837 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:00:47.837 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:00:47.850 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2023-03-30 16:00:47.854 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2023-03-30 16:00:47.854 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:00:47.855 [main] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2023-03-30 16:00:50.866 [main] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2023-03-30 16:00:50.885 [main] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - deregister  status: 200
2023-03-30 16:00:50.894 [main] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2023-03-30 16:00:50.901 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8001 was already in use.

Action:

Identify and stop the process that's listening on port 8001 or configure this application to listen on another port.

2023-03-30 16:03:32.113 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:03:33.784 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:03:35.064 [main] INFO  center.misaki.device.userApp - The following profiles are active: dev
2023-03-30 16:03:35.855 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:03:35.857 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:03:35.908 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40ms. Found 0 Redis repository interfaces.
2023-03-30 16:03:35.985 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:03:36.145 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:03:36.213 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$491ccbc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:03:36.277 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:03:36.456 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:03:36.662 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:03:36.670 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:03:36.670 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:03:36.670 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:03:36.771 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:03:36.771 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1692 ms
2023-03-30 16:03:36.852 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:03:36.853 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:03:36.859 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@10244722
2023-03-30 16:03:36.958 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:03:37.244 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:03:38.490 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:03:39.772 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:03:40.474 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1fc5c0b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@18e8eb59, org.springframework.security.web.header.HeaderWriterFilter@38848217, org.springframework.security.web.authentication.logout.LogoutFilter@7ec508e6, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@1b485c8b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6adcf059, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bf4e48e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7cbf4f8c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45ad3cd8, org.springframework.security.web.session.SessionManagementFilter@792e8181, org.springframework.security.web.access.ExceptionTranslationFilter@5aac6f9f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ab2009f]
2023-03-30 16:03:40.483 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@4f8900b0, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e7e455d, org.springframework.security.web.context.SecurityContextPersistenceFilter@380e33c2, org.springframework.security.web.header.HeaderWriterFilter@54556723, org.springframework.security.web.authentication.logout.LogoutFilter@4a0c3aa8, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@67f8f5a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3bc891f2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@445b85d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@33e8e146, org.springframework.security.web.session.SessionManagementFilter@6124dda2, org.springframework.security.web.access.ExceptionTranslationFilter@3c87e851, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6339e604]
2023-03-30 16:03:40.493 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27a90ce5, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a8b9458, org.springframework.security.web.header.HeaderWriterFilter@615ef20, org.springframework.security.web.csrf.CsrfFilter@319b1c77, org.springframework.security.web.authentication.logout.LogoutFilter@78bd02c8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@69f3e556, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@664f49f, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@77f4038c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@51869ad6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7497a554, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5dd23809, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49a06087, org.springframework.security.web.session.SessionManagementFilter@13390a96, org.springframework.security.web.access.ExceptionTranslationFilter@57b33c29, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17ae13d5]
2023-03-30 16:03:40.610 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:03:40.610 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:03:40.758 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:03:42.404 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:03:43.585 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:03:43.613 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:03:43.653 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:03:43.667 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:03:43.739 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:03:43.765 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:03:43.881 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:03:43.881 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:03:43.962 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:03:43.962 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:03:44.062 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:03:44.185 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:03:44.185 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:03:44.185 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:03:44.185 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:03:44.185 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:03:44.185 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:03:44.185 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:03:44.290 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:03:44.292 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:03:44.293 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:03:44.295 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680163424294 with initial instances count: 1
2023-03-30 16:03:44.298 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:03:44.300 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163424300, current=UP, previous=STARTING]
2023-03-30 16:03:44.301 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:03:44.312 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:03:44.335 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:03:44.335 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:03:44.336 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:03:45.529 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:03:45.531 [main] INFO  center.misaki.device.userApp - Started userApp in 13.377 seconds (JVM running for 14.213)
2023-03-30 16:03:45.940 [RMI TCP Connection(5)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:03:45.940 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:03:45.950 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-03-30 16:03:46.067 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:03:46.068 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:03:48.446 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:716)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:750)
2023-03-30 16:04:36.123 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:04:37.775 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:04:39.053 [main] INFO  center.misaki.device.userApp - The following profiles are active: dev
2023-03-30 16:04:39.808 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:04:39.810 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:04:39.864 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40ms. Found 0 Redis repository interfaces.
2023-03-30 16:04:39.949 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:04:40.109 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:04:40.177 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$f8e056f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:04:40.241 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:04:40.414 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:04:40.617 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:04:40.625 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:04:40.626 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:04:40.626 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:04:40.733 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:04:40.733 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1666 ms
2023-03-30 16:04:40.810 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:04:40.810 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:04:40.817 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@73afe2b7
2023-03-30 16:04:40.907 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:04:41.160 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:04:42.411 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:04:43.691 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:04:44.401 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13cf5f8a, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a7db5a, org.springframework.security.web.header.HeaderWriterFilter@1c792107, org.springframework.security.web.authentication.logout.LogoutFilter@25dcf1b6, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@66e12c3b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@151659dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6eaf030c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@543da15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c9ea1d0, org.springframework.security.web.session.SessionManagementFilter@1b317e7d, org.springframework.security.web.access.ExceptionTranslationFilter@59b98ad1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@420b55ed]
2023-03-30 16:04:44.411 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@61d011e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b56947a, org.springframework.security.web.context.SecurityContextPersistenceFilter@5dd23809, org.springframework.security.web.header.HeaderWriterFilter@3a8b9458, org.springframework.security.web.authentication.logout.LogoutFilter@65015a49, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@148b6f95, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@664f49f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60ab895f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1926f962, org.springframework.security.web.session.SessionManagementFilter@7497a554, org.springframework.security.web.access.ExceptionTranslationFilter@13390a96, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@83e635f]
2023-03-30 16:04:44.420 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b2c8bda, org.springframework.security.web.context.SecurityContextPersistenceFilter@15a484a9, org.springframework.security.web.header.HeaderWriterFilter@152891f8, org.springframework.security.web.csrf.CsrfFilter@38cf4497, org.springframework.security.web.authentication.logout.LogoutFilter@294c44b7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@72e75786, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4df7b4ac, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@688d619c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@733fa95c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@b56c222, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a2035e1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@647ff23e, org.springframework.security.web.session.SessionManagementFilter@1d2c253, org.springframework.security.web.access.ExceptionTranslationFilter@5e681097, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2cc61b3b]
2023-03-30 16:04:44.535 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:04:44.536 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:04:44.685 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:04:46.326 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:04:47.492 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:04:47.518 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:04:47.557 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:04:47.571 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:04:47.644 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:04:47.668 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:04:47.788 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:04:47.789 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:04:47.866 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:04:47.866 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:04:47.964 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:04:48.093 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:04:48.093 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:04:48.093 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:04:48.093 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:04:48.093 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:04:48.093 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:04:48.093 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:04:48.197 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:04:48.199 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:04:48.200 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:04:48.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680163488202 with initial instances count: 2
2023-03-30 16:04:48.206 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:04:48.206 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163488206, current=UP, previous=STARTING]
2023-03-30 16:04:48.208 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:04:48.219 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:04:48.240 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:04:48.240 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:04:48.241 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:04:49.421 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:04:49.422 [main] INFO  center.misaki.device.userApp - Started userApp in 13.257 seconds (JVM running for 14.104)
2023-03-30 16:04:49.934 [RMI TCP Connection(5)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:04:49.934 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:04:49.943 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-03-30 16:04:50.046 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:04:50.048 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:05:39.121 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:05:40.803 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:05:42.105 [main] INFO  center.misaki.device.userApp - The following profiles are active: dev
2023-03-30 16:05:43.006 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:05:43.008 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:05:43.062 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42ms. Found 0 Redis repository interfaces.
2023-03-30 16:05:43.150 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:05:43.329 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:05:43.411 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$343240eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:05:43.493 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:05:43.687 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:05:43.917 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:05:43.927 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:05:43.927 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:05:43.927 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:05:44.041 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:05:44.042 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1918 ms
2023-03-30 16:05:44.146 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:05:44.146 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:05:44.154 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7a9ceddf
2023-03-30 16:05:44.258 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:05:44.532 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:05:45.794 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:05:47.171 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:05:47.953 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@144440f5, org.springframework.security.web.context.SecurityContextPersistenceFilter@10f8e2d2, org.springframework.security.web.header.HeaderWriterFilter@6fe5da76, org.springframework.security.web.authentication.logout.LogoutFilter@795faad, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@2ecdcfe3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@42cfd794, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@af9dd34, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c9ea1d0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e2c8ef, org.springframework.security.web.session.SessionManagementFilter@e7e455d, org.springframework.security.web.access.ExceptionTranslationFilter@7037a680, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42d0e41]
2023-03-30 16:05:47.966 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@186f7434, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2374452a, org.springframework.security.web.context.SecurityContextPersistenceFilter@4946485c, org.springframework.security.web.header.HeaderWriterFilter@2833c093, org.springframework.security.web.authentication.logout.LogoutFilter@340fc1aa, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@2cc34cd5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ae958b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c682e26, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ffc6ea7, org.springframework.security.web.session.SessionManagementFilter@7598d675, org.springframework.security.web.access.ExceptionTranslationFilter@3ec7ad61, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c75e3bc]
2023-03-30 16:05:47.975 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@546083d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b347439, org.springframework.security.web.header.HeaderWriterFilter@520c3dcb, org.springframework.security.web.csrf.CsrfFilter@71285693, org.springframework.security.web.authentication.logout.LogoutFilter@53a09566, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@32513dea, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5960f17, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7ac1b6c0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6f655dbd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d3634c8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e67a8c0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a751535, org.springframework.security.web.session.SessionManagementFilter@145fe8ab, org.springframework.security.web.access.ExceptionTranslationFilter@2ef913a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24068086]
2023-03-30 16:05:48.119 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:05:48.119 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:05:48.404 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:05:49.991 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:05:51.171 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:05:51.201 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:05:51.245 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:05:51.260 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:05:51.340 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:05:51.367 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:05:51.493 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:05:51.494 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:05:51.582 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:05:51.582 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:05:51.723 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:05:51.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:05:51.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:05:51.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:05:51.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:05:51.845 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:05:51.845 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:05:51.845 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:05:51.972 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:05:51.974 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:05:51.976 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:05:51.979 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680163551978 with initial instances count: 3
2023-03-30 16:05:51.983 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:05:51.983 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163551983, current=UP, previous=STARTING]
2023-03-30 16:05:51.985 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:05:51.997 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:05:52.021 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:05:52.023 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:05:52.024 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:05:53.209 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:05:53.211 [main] INFO  center.misaki.device.userApp - Started userApp in 14.051 seconds (JVM running for 15.606)
2023-03-30 16:05:53.734 [RMI TCP Connection(2)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:05:53.734 [RMI TCP Connection(2)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:05:53.745 [RMI TCP Connection(2)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2023-03-30 16:05:53.862 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:05:53.863 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:06:23.444 [SpringContextShutdownHook] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application AUTH-CENTER with eureka with status DOWN
2023-03-30 16:06:23.444 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163583444, current=DOWN, previous=UP]
2023-03-30 16:06:23.444 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:06:23.446 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-03-30 16:06:23.457 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:06:23.569 [SpringContextShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2023-03-30 16:06:23.578 [SpringContextShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2023-03-30 16:06:23.579 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2023-03-30 16:06:26.581 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2023-03-30 16:06:26.599 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - deregister  status: 200
2023-03-30 16:06:26.605 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2023-03-30 16:09:25.925 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:09:27.568 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:09:28.850 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 16:09:29.607 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:09:29.609 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:09:29.656 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 Redis repository interfaces.
2023-03-30 16:09:29.728 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:09:29.884 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:09:29.951 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$ba9ea0e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:09:30.014 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:09:30.186 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:09:30.382 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:09:30.389 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:09:30.389 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:09:30.390 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:09:30.487 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:09:30.487 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1621 ms
2023-03-30 16:09:30.569 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:09:30.569 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:09:30.575 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@13bdf540
2023-03-30 16:09:30.667 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:09:36.101 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:09:37.372 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:09:38.686 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:09:39.411 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c1f15df, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e1d1524, org.springframework.security.web.header.HeaderWriterFilter@6ca33187, org.springframework.security.web.authentication.logout.LogoutFilter@1bb4c431, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@45c408a4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@29188050, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e52d2f2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12d44a2a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e95b0ab, org.springframework.security.web.session.SessionManagementFilter@76fc5687, org.springframework.security.web.access.ExceptionTranslationFilter@3f1d6a13, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b90cc1]
2023-03-30 16:09:39.422 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@615ef20, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13390a96, org.springframework.security.web.context.SecurityContextPersistenceFilter@492c8137, org.springframework.security.web.header.HeaderWriterFilter@45311a99, org.springframework.security.web.authentication.logout.LogoutFilter@6fe5da76, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@4a58e0e9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@420b55ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f237ae7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a8b9458, org.springframework.security.web.session.SessionManagementFilter@7037a680, org.springframework.security.web.access.ExceptionTranslationFilter@ba0018e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@57b33c29]
2023-03-30 16:09:39.434 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1cb44a2f, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ecdcfe3, org.springframework.security.web.header.HeaderWriterFilter@71668a67, org.springframework.security.web.csrf.CsrfFilter@43b4ec0c, org.springframework.security.web.authentication.logout.LogoutFilter@83e635f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@c82ad22, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5af40e45, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@5fe3b058, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5c60c08, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65b73689, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2047adea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a661215, org.springframework.security.web.session.SessionManagementFilter@3ff26c9, org.springframework.security.web.access.ExceptionTranslationFilter@3e5ebdfe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62794582]
2023-03-30 16:09:39.570 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:09:39.570 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:09:39.755 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:09:41.511 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:09:42.684 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:09:42.712 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:09:42.757 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:09:42.771 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:09:42.852 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:09:42.879 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:09:43.021 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:09:43.022 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:09:43.103 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:09:43.104 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:09:43.208 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:09:43.329 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:09:43.329 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:09:43.329 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:09:43.329 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:09:43.329 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:09:43.329 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:09:43.330 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:09:43.439 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:09:43.441 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:09:43.443 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:09:43.446 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680163783445 with initial instances count: 2
2023-03-30 16:09:43.450 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:09:43.450 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163783450, current=UP, previous=STARTING]
2023-03-30 16:09:43.452 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:09:43.466 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:09:43.479 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:09:43.489 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:09:43.490 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:09:44.678 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:09:44.680 [main] INFO  center.misaki.device.userApp - Started userApp in 18.716 seconds (JVM running for 19.491)
2023-03-30 16:09:45.258 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:09:45.259 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:09:45.359 [RMI TCP Connection(5)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:09:45.359 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:09:45.373 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2023-03-30 16:09:55.629 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.0.2:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.0.2:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /192.168.0.2:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-03-30 16:12:24.869 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:12:26.566 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:12:27.857 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 16:12:28.608 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:12:28.609 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:12:28.657 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 Redis repository interfaces.
2023-03-30 16:12:28.728 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:12:28.882 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:12:28.949 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$a574297] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:12:29.012 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:12:29.171 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:12:29.366 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:12:29.374 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:12:29.374 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:12:29.375 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:12:29.483 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:12:29.484 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1613 ms
2023-03-30 16:12:29.561 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:12:29.561 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:12:29.568 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@709f0202
2023-03-30 16:12:29.657 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:12:35.100 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:12:36.361 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:12:37.608 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:12:38.316 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@380e33c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@13374ca6, org.springframework.security.web.header.HeaderWriterFilter@54997f67, org.springframework.security.web.authentication.logout.LogoutFilter@3f64d943, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@4fd3b20a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6bdedbbd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@55c46ec1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50fd739d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bc891f2, org.springframework.security.web.session.SessionManagementFilter@76b05c0, org.springframework.security.web.access.ExceptionTranslationFilter@2e1291a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8aa5ab4]
2023-03-30 16:12:38.327 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@151659dd, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a58e0e9, org.springframework.security.web.context.SecurityContextPersistenceFilter@65259c53, org.springframework.security.web.header.HeaderWriterFilter@5bf523e3, org.springframework.security.web.authentication.logout.LogoutFilter@6c1f15df, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@6fe5da76, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bff28e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39e7e040, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e8c84eb, org.springframework.security.web.session.SessionManagementFilter@8d29719, org.springframework.security.web.access.ExceptionTranslationFilter@3f122cdc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@48692405]
2023-03-30 16:12:38.336 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@65b73689, org.springframework.security.web.context.SecurityContextPersistenceFilter@17ae13d5, org.springframework.security.web.header.HeaderWriterFilter@47e60b71, org.springframework.security.web.csrf.CsrfFilter@295f2d1b, org.springframework.security.web.authentication.logout.LogoutFilter@2c15034f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3e5ebdfe, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@36511772, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2047adea, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2ecdcfe3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69f3e556, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1eb9d69a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5af40e45, org.springframework.security.web.session.SessionManagementFilter@795faad, org.springframework.security.web.access.ExceptionTranslationFilter@28dacf31, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a6efe33]
2023-03-30 16:12:38.451 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:12:38.452 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:12:38.597 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:12:40.242 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:12:41.410 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:12:41.436 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:12:41.474 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:12:41.487 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:12:41.558 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:12:41.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:12:41.692 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:12:41.693 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:12:41.769 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:12:41.769 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:12:41.867 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:12:41.995 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:12:41.995 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:12:41.995 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:12:41.995 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:12:41.996 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:12:41.996 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:12:41.996 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:12:42.099 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:12:42.101 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:12:42.102 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:12:42.104 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680163962104 with initial instances count: 1
2023-03-30 16:12:42.108 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:12:42.108 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680163962108, current=UP, previous=STARTING]
2023-03-30 16:12:42.109 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:12:42.122 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:12:42.142 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:12:42.142 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:12:42.143 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:12:43.325 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:12:43.327 [main] INFO  center.misaki.device.userApp - Started userApp in 18.418 seconds (JVM running for 19.295)
2023-03-30 16:12:43.917 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:12:43.919 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:12:44.013 [RMI TCP Connection(3)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:12:44.013 [RMI TCP Connection(3)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:12:44.022 [RMI TCP Connection(3)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-03-30 16:12:54.254 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.17.0.3:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.17.0.3:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /172.17.0.3:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-03-30 16:15:54.929 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:15:56.576 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:15:57.860 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 16:15:58.654 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:15:58.656 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:15:58.704 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 Redis repository interfaces.
2023-03-30 16:15:58.781 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:15:58.947 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:15:59.015 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$81d47165] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:15:59.078 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:15:59.248 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:15:59.444 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:15:59.452 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:15:59.453 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:15:59.453 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:15:59.564 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:15:59.564 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1689 ms
2023-03-30 16:15:59.644 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:15:59.644 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:15:59.651 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5a90265a
2023-03-30 16:15:59.749 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:16:04.936 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:16:06.195 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:16:07.446 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:16:08.148 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77d95e5a, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f70e244, org.springframework.security.web.header.HeaderWriterFilter@26d8908e, org.springframework.security.web.authentication.logout.LogoutFilter@45c408a4, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@2ac05a33, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@ba0018e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@68454ed5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68479e8b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6339e604, org.springframework.security.web.session.SessionManagementFilter@4119346d, org.springframework.security.web.access.ExceptionTranslationFilter@78504ce9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26a33cf]
2023-03-30 16:16:08.158 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@36511772, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51869ad6, org.springframework.security.web.context.SecurityContextPersistenceFilter@af9dd34, org.springframework.security.web.header.HeaderWriterFilter@4f525e13, org.springframework.security.web.authentication.logout.LogoutFilter@e8c84eb, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3a8b9458, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48692405, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@151659dd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27a90ce5, org.springframework.security.web.session.SessionManagementFilter@5d404a3c, org.springframework.security.web.access.ExceptionTranslationFilter@66048ac4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1eb9d69a]
2023-03-30 16:16:08.168 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9d3a7a1, org.springframework.security.web.context.SecurityContextPersistenceFilter@1cb44a2f, org.springframework.security.web.header.HeaderWriterFilter@2d3b0978, org.springframework.security.web.csrf.CsrfFilter@3b56947a, org.springframework.security.web.authentication.logout.LogoutFilter@197d5a87, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@43d6262c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1f75fd1d, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1c411474, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7b4619a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5fe3b058, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a661215, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e681097, org.springframework.security.web.session.SessionManagementFilter@5c60c08, org.springframework.security.web.access.ExceptionTranslationFilter@3f80d8c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c8fe8ad]
2023-03-30 16:16:08.286 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:16:08.287 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:16:08.433 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:16:10.089 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:16:11.272 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:16:11.298 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:16:11.337 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:16:11.350 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:16:11.421 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:16:11.444 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:16:11.557 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:16:11.557 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:16:11.633 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:16:11.634 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:16:11.732 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:16:11.853 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:16:11.853 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:16:11.853 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:16:11.853 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:16:11.854 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:16:11.854 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:16:11.854 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:16:11.961 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:16:11.963 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:16:11.964 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:16:11.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680164171966 with initial instances count: 2
2023-03-30 16:16:11.970 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:16:11.971 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680164171971, current=UP, previous=STARTING]
2023-03-30 16:16:11.972 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:16:11.984 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:16:12.003 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:16:12.004 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:16:12.005 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:16:13.176 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:16:13.178 [main] INFO  center.misaki.device.userApp - Started userApp in 18.213 seconds (JVM running for 18.977)
2023-03-30 16:16:13.315 [RMI TCP Connection(1)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:16:13.315 [RMI TCP Connection(1)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:16:13.325 [RMI TCP Connection(1)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-03-30 16:16:13.643 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:16:13.645 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:16:14.007 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to device.misaki.world:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to device.misaki.world:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.lettuce.core.RedisCommandExecutionException: ERR AUTH <password> called without any password configured for the default user. Are you sure your configuration is correct?
	at io.lettuce.core.ExceptionFactory.createExecutionException(ExceptionFactory.java:135)
	at io.lettuce.core.ExceptionFactory.createExecutionException(ExceptionFactory.java:108)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandWrapper.complete(CommandWrapper.java:59)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:654)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:614)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:565)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-03-30 16:21:11.863 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:22:17.210 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:22:18.930 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:22:20.229 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 16:22:21.452 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:22:21.453 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:22:21.501 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 Redis repository interfaces.
2023-03-30 16:22:21.576 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:22:21.735 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:22:21.803 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$a96375c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:22:21.867 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:22:22.041 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:22:22.254 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:22:22.263 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:22:22.263 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:22:22.263 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:22:22.362 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:22:22.363 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2119 ms
2023-03-30 16:22:22.449 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:22:22.449 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:22:22.455 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@79e7188e
2023-03-30 16:22:22.555 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:22:27.704 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:22:28.981 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:22:30.270 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:22:30.960 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c15034f, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ac05a33, org.springframework.security.web.header.HeaderWriterFilter@356f20b7, org.springframework.security.web.authentication.logout.LogoutFilter@13404f75, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@949d347, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@17ae13d5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6aaa678d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ec7eb5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43b4ec0c, org.springframework.security.web.session.SessionManagementFilter@6d6f6ca9, org.springframework.security.web.access.ExceptionTranslationFilter@69d7bc1a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@584136c1]
2023-03-30 16:22:30.971 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@15a484a9, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b56c222, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a06602f, org.springframework.security.web.header.HeaderWriterFilter@2047adea, org.springframework.security.web.authentication.logout.LogoutFilter@83e635f, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@49cceb19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46591e98, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b6cc344, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a2035e1, org.springframework.security.web.session.SessionManagementFilter@5af40e45, org.springframework.security.web.access.ExceptionTranslationFilter@65b73689, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d2c253]
2023-03-30 16:22:30.980 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b8a0d03, org.springframework.security.web.context.SecurityContextPersistenceFilter@19d3f6ad, org.springframework.security.web.header.HeaderWriterFilter@556aed22, org.springframework.security.web.csrf.CsrfFilter@2dde0a34, org.springframework.security.web.authentication.logout.LogoutFilter@8ee03f5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3f908bc0, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@24de63b, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@54f373d4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@707f4647, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b69fc07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19e801b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c53bd49, org.springframework.security.web.session.SessionManagementFilter@57a982f9, org.springframework.security.web.access.ExceptionTranslationFilter@2f75a9b1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@45b27ad3]
2023-03-30 16:22:31.097 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:22:31.098 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:22:31.242 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:22:32.916 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:22:34.081 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:22:34.109 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:22:34.147 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:22:34.161 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:22:34.235 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:22:34.259 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:22:34.373 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:22:34.373 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:22:34.455 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:22:34.455 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:22:34.558 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:22:34.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:22:34.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:22:34.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:22:34.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:22:34.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:22:34.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:22:34.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:22:34.788 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:22:34.790 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:22:34.792 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:22:34.794 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680164554794 with initial instances count: 3
2023-03-30 16:22:34.799 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:22:34.799 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680164554799, current=UP, previous=STARTING]
2023-03-30 16:22:34.800 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:22:34.812 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:22:34.833 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:22:34.836 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:22:34.837 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:22:36.010 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:22:36.012 [main] INFO  center.misaki.device.userApp - Started userApp in 18.757 seconds (JVM running for 19.578)
2023-03-30 16:22:36.520 [RMI TCP Connection(5)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:22:36.520 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:22:36.530 [RMI TCP Connection(5)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-03-30 16:22:36.651 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:22:36.652 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:22:37.015 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 124.222.87.213:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 124.222.87.213:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.lettuce.core.RedisCommandExecutionException: ERR AUTH <password> called without any password configured for the default user. Are you sure your configuration is correct?
	at io.lettuce.core.ExceptionFactory.createExecutionException(ExceptionFactory.java:135)
	at io.lettuce.core.ExceptionFactory.createExecutionException(ExceptionFactory.java:108)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandWrapper.complete(CommandWrapper.java:59)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:654)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:614)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:565)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-03-30 16:26:14.822 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:26:16.470 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:26:17.745 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 16:26:18.493 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:26:18.494 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:26:18.541 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36ms. Found 0 Redis repository interfaces.
2023-03-30 16:26:18.614 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:26:18.774 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:26:18.840 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$cadcad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:26:18.903 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:26:19.066 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:26:19.258 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:26:19.267 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:26:19.267 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:26:19.267 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:26:19.361 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:26:19.361 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1601 ms
2023-03-30 16:26:19.442 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:26:19.443 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:26:19.449 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@36068727
2023-03-30 16:26:19.546 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:26:24.856 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:26:26.102 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:26:27.366 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:26:28.054 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e8c84eb, org.springframework.security.web.context.SecurityContextPersistenceFilter@4e951fb1, org.springframework.security.web.header.HeaderWriterFilter@1b485c8b, org.springframework.security.web.authentication.logout.LogoutFilter@35f760a4, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@5534e6f1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@10f8e2d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@295d54d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@acd3460, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f44d033, org.springframework.security.web.session.SessionManagementFilter@2248d140, org.springframework.security.web.access.ExceptionTranslationFilter@3f64d943, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@670a4738]
2023-03-30 16:26:28.064 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@5af40e45, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a06602f, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ea2f72e, org.springframework.security.web.header.HeaderWriterFilter@584136c1, org.springframework.security.web.authentication.logout.LogoutFilter@3a8b9458, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@51869ad6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57b33c29, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@615ef20, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46591e98, org.springframework.security.web.session.SessionManagementFilter@51d88c38, org.springframework.security.web.access.ExceptionTranslationFilter@319b1c77, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2047adea]
2023-03-30 16:26:28.074 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67e4928c, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b4619a3, org.springframework.security.web.header.HeaderWriterFilter@5e2975ca, org.springframework.security.web.csrf.CsrfFilter@131d977f, org.springframework.security.web.authentication.logout.LogoutFilter@5a2035e1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6acb45c1, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5e681097, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2cc61b3b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@57b130f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9d3a7a1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c411474, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72e75786, org.springframework.security.web.session.SessionManagementFilter@38cf4497, org.springframework.security.web.access.ExceptionTranslationFilter@43d6262c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ae9d0e4]
2023-03-30 16:26:28.188 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:26:28.188 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:26:28.336 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:26:29.989 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:26:31.168 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:26:31.194 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:26:31.233 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:26:31.246 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:26:31.317 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:26:31.342 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:26:31.451 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:26:31.452 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:26:31.529 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:26:31.530 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:26:31.626 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:26:31.750 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:26:31.750 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:26:31.750 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:26:31.750 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:26:31.751 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:26:31.751 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:26:31.751 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:26:31.853 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:26:31.856 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:26:31.857 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:26:31.859 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680164791859 with initial instances count: 3
2023-03-30 16:26:31.863 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:26:31.863 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680164791863, current=UP, previous=STARTING]
2023-03-30 16:26:31.865 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:26:31.878 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:26:31.888 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:26:31.897 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:26:31.898 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:26:33.068 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:26:33.070 [main] INFO  center.misaki.device.userApp - Started userApp in 18.208 seconds (JVM running for 18.984)
2023-03-30 16:26:33.503 [RMI TCP Connection(2)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:26:33.503 [RMI TCP Connection(2)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:26:33.513 [RMI TCP Connection(2)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-03-30 16:26:33.627 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:26:33.629 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 16:26:43.937 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.17.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.17.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /172.17.0.1:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-03-30 16:31:31.766 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:36:31.781 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:38:33.097 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 16:38:34.833 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:38:36.123 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 16:38:36.897 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 16:38:36.898 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 16:38:36.947 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 Redis repository interfaces.
2023-03-30 16:38:37.020 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 16:38:37.183 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 16:38:37.253 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$b094b898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:38:37.317 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:38:37.483 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 16:38:37.680 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 16:38:37.687 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 16:38:37.688 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 16:38:37.688 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 16:38:37.787 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 16:38:37.788 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1651 ms
2023-03-30 16:38:37.869 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:38:37.869 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:38:37.877 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6b649efa
2023-03-30 16:38:37.968 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 16:38:42.972 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 16:38:44.236 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:38:45.916 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 16:38:46.616 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@151659dd, org.springframework.security.web.context.SecurityContextPersistenceFilter@ce19c86, org.springframework.security.web.header.HeaderWriterFilter@6d2db15b, org.springframework.security.web.authentication.logout.LogoutFilter@4e1a3d5a, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@f793f15, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@18463720, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bb4c431, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a3a49e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a58e0e9, org.springframework.security.web.session.SessionManagementFilter@591e5fd4, org.springframework.security.web.access.ExceptionTranslationFilter@7f70e244, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@141b011a]
2023-03-30 16:38:46.626 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@65b73689, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2047adea, org.springframework.security.web.context.SecurityContextPersistenceFilter@584136c1, org.springframework.security.web.header.HeaderWriterFilter@72f3acc9, org.springframework.security.web.authentication.logout.LogoutFilter@615ef20, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@1eb9d69a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51d88c38, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ea2f72e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5af40e45, org.springframework.security.web.session.SessionManagementFilter@319b1c77, org.springframework.security.web.access.ExceptionTranslationFilter@7c9ea1d0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ecdcfe3]
2023-03-30 16:38:46.635 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30bbe83, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e2975ca, org.springframework.security.web.header.HeaderWriterFilter@3c8fe8ad, org.springframework.security.web.csrf.CsrfFilter@49cceb19, org.springframework.security.web.authentication.logout.LogoutFilter@15a484a9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@41bd6a0f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@9d3a7a1, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@57b130f6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@294c44b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38cf4497, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b4619a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67e4928c, org.springframework.security.web.session.SessionManagementFilter@43d6262c, org.springframework.security.web.access.ExceptionTranslationFilter@4f552aa2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c47e077]
2023-03-30 16:38:46.750 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 16:38:46.750 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 16:38:46.899 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 16:38:48.577 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:38:49.752 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:38:49.782 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 16:38:49.825 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 16:38:49.841 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 16:38:49.917 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 16:38:49.948 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 16:38:50.065 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 16:38:50.065 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 16:38:50.143 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 16:38:50.143 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 16:38:50.249 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 16:38:50.368 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 16:38:50.368 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 16:38:50.368 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 16:38:50.368 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 16:38:50.368 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 16:38:50.368 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 16:38:50.368 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 16:38:50.470 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 16:38:50.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 16:38:50.473 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 16:38:50.476 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680165530475 with initial instances count: 3
2023-03-30 16:38:50.479 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 16:38:50.479 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680165530479, current=UP, previous=STARTING]
2023-03-30 16:38:50.482 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 16:38:50.493 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 16:38:50.516 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 16:38:50.516 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 16:38:50.517 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 16:38:51.685 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 16:38:51.687 [main] INFO  center.misaki.device.userApp - Started userApp in 18.542 seconds (JVM running for 19.339)
2023-03-30 16:38:52.333 [RMI TCP Connection(3)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 16:38:52.333 [RMI TCP Connection(3)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 16:38:52.344 [RMI TCP Connection(3)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-03-30 16:38:52.463 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 16:38:52.464 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 17:08:36.457 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 17:08:38.187 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:08:39.453 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 17:08:40.222 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 17:08:40.224 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 17:08:40.274 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 Redis repository interfaces.
2023-03-30 17:08:40.345 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 17:08:40.505 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 17:08:40.576 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$b39ff4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:08:40.645 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:08:40.797 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:08:40.990 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 17:08:40.998 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 17:08:40.998 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 17:08:40.999 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 17:08:41.095 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 17:08:41.095 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1627 ms
2023-03-30 17:08:41.177 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 17:08:41.177 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 17:08:41.184 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@14447be
2023-03-30 17:08:41.282 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 17:08:46.518 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 17:08:47.783 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:08:49.019 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 17:08:49.717 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@113d0f75, org.springframework.security.web.context.SecurityContextPersistenceFilter@1dcca426, org.springframework.security.web.header.HeaderWriterFilter@72f35a31, org.springframework.security.web.authentication.logout.LogoutFilter@2444c3df, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@bf4e48e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@236b4a44, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77cc6a28, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@fb5d334, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e10a320, org.springframework.security.web.session.SessionManagementFilter@407f2029, org.springframework.security.web.access.ExceptionTranslationFilter@6bc25ac2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ea9a091]
2023-03-30 17:08:49.729 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@f5ae29e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1fc5c0b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@aa8dce8, org.springframework.security.web.header.HeaderWriterFilter@5534e6f1, org.springframework.security.web.authentication.logout.LogoutFilter@66e12c3b, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3d718248, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ad112de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18a0721b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45ad3cd8, org.springframework.security.web.session.SessionManagementFilter@4c6fc3e7, org.springframework.security.web.access.ExceptionTranslationFilter@3ec7eb5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@949d347]
2023-03-30 17:08:49.740 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6339e604, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e95b0ab, org.springframework.security.web.header.HeaderWriterFilter@2591d23a, org.springframework.security.web.csrf.CsrfFilter@5bf523e3, org.springframework.security.web.authentication.logout.LogoutFilter@ba0018e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f237ae7, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@67f8f5a6, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4f8900b0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@77d95e5a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5876bed9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73ddb7ef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e7e455d, org.springframework.security.web.session.SessionManagementFilter@6c1f15df, org.springframework.security.web.access.ExceptionTranslationFilter@39e7e040, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@420b55ed]
2023-03-30 17:08:49.855 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 17:08:49.856 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 17:08:49.991 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 17:08:51.614 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:08:52.780 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:08:52.807 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 17:08:52.843 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 17:08:52.855 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 17:08:52.923 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 17:08:52.945 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 17:08:53.052 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 17:08:53.053 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 17:08:53.126 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 17:08:53.126 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 17:08:53.219 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 17:08:53.338 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 17:08:53.338 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 17:08:53.338 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 17:08:53.338 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 17:08:53.339 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 17:08:53.339 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 17:08:53.339 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 17:08:57.433 [main] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:18761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$b8e6c9ea.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at center.misaki.device.userApp.main(userApp.java:23)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 75 common frames omitted
2023-03-30 17:08:57.434 [main] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2023-03-30 17:08:57.434 [main] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$b8e6c9ea.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at center.misaki.device.userApp.main(userApp.java:23)
2023-03-30 17:08:57.435 [main] WARN  com.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2023-03-30 17:08:57.436 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 17:08:57.437 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 17:08:57.440 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680167337439 with initial instances count: 0
2023-03-30 17:08:57.444 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 17:08:57.444 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680167337444, current=UP, previous=STARTING]
2023-03-30 17:08:57.446 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 17:08:57.457 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 17:08:57.479 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 17:08:57.480 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 17:08:58.650 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:08:58.652 [main] INFO  center.misaki.device.userApp - Started userApp in 22.155 seconds (JVM running for 22.995)
2023-03-30 17:08:59.075 [RMI TCP Connection(2)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 17:08:59.075 [RMI TCP Connection(2)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 17:08:59.087 [RMI TCP Connection(2)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2023-03-30 17:08:59.220 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 17:08:59.221 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 17:09:01.515 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:18761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2023-03-30 17:09:01.516 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2023-03-30 17:09:01.516 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
2023-03-30 17:09:01.516 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
2023-03-30 17:09:09.538 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 10.0.12.2:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 10.0.12.2:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /10.0.12.2:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-03-30 17:09:27.438 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 17:09:27.439 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 17:09:27.439 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 17:09:27.439 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 17:09:27.439 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 17:09:27.439 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 17:09:27.439 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 17:09:31.473 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:18761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2023-03-30 17:09:31.473 [DiscoveryClient-CacheRefreshExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:18761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2023-03-30 17:09:31.474 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2023-03-30 17:09:31.474 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2023-03-30 17:09:31.474 [DiscoveryClient-HeartbeatExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
2023-03-30 17:09:31.474 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
2023-03-30 17:09:31.520 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 17:09:35.621 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:18761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
2023-03-30 17:09:35.622 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2023-03-30 17:09:35.622 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
2023-03-30 17:09:35.622 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
2023-03-30 17:09:41.960 [main] INFO  org.springframework.core.KotlinDetector - Kotlin reflection implementation not found at runtime, related features won't be available.
2023-03-30 17:09:43.590 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:09:44.858 [main] INFO  center.misaki.device.userApp - The following profiles are active: prod
2023-03-30 17:09:45.608 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-30 17:09:45.610 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-03-30 17:09:45.656 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 Redis repository interfaces.
2023-03-30 17:09:45.730 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-03-30 17:09:45.906 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a22055f8-ab77-3702-9c8f-92a2fe3a992d
2023-03-30 17:09:45.973 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncTaskExecutePool' of type [center.misaki.device.Config.AsyncTaskExecutePool$$EnhancerBySpringCGLIB$$1c29d4be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:09:46.042 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:09:46.216 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-03-30 17:09:46.413 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8001 (http)
2023-03-30 17:09:46.421 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2023-03-30 17:09:46.421 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-30 17:09:46.421 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.30]
2023-03-30 17:09:46.518 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-30 17:09:46.518 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1647 ms
2023-03-30 17:09:46.597 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 17:09:46.597 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 17:09:46.604 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@22bf9122
2023-03-30 17:09:46.701 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2023-03-30 17:09:51.908 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2023-03-30 17:09:53.161 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:09:54.387 [main] WARN  o.s.s.o.p.token.store.JwtAccessTokenConverter - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2023-03-30 17:09:55.077 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25e95af1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fd3b20a, org.springframework.security.web.header.HeaderWriterFilter@7bbd76b8, org.springframework.security.web.authentication.logout.LogoutFilter@4cef0747, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@6ad112de, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d404a3c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56b66a26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26495639, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fa8297b, org.springframework.security.web.session.SessionManagementFilter@ce19c86, org.springframework.security.web.access.ExceptionTranslationFilter@6d2db15b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@45311a99]
2023-03-30 17:09:55.088 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@5b6cc344, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2110684a, org.springframework.security.web.context.SecurityContextPersistenceFilter@13390a96, org.springframework.security.web.header.HeaderWriterFilter@57b33c29, org.springframework.security.web.authentication.logout.LogoutFilter@664f49f, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@49a06087, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a8b9458, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7497a554, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@83e635f, org.springframework.security.web.session.SessionManagementFilter@615ef20, org.springframework.security.web.access.ExceptionTranslationFilter@3ea2f72e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@46591e98]
2023-03-30 17:09:55.098 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c0fefac, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e681097, org.springframework.security.web.header.HeaderWriterFilter@9d3a7a1, org.springframework.security.web.csrf.CsrfFilter@3c8fe8ad, org.springframework.security.web.authentication.logout.LogoutFilter@41bd6a0f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@57b130f6, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@15a484a9, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@6fbc7853, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@72e75786, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@152891f8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d2c253, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@733fa95c, org.springframework.security.web.session.SessionManagementFilter@1c411474, org.springframework.security.web.access.ExceptionTranslationFilter@7b4619a3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@30bbe83]
2023-03-30 17:09:55.215 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-03-30 17:09:55.215 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-03-30 17:09:55.372 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-03-30 17:09:57.034 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:09:58.207 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:09:58.235 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2023-03-30 17:09:58.275 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2023-03-30 17:09:58.288 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-03-30 17:09:58.360 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-30 17:09:58.385 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-30 17:09:58.500 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2023-03-30 17:09:58.501 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2023-03-30 17:09:58.583 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2023-03-30 17:09:58.583 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2023-03-30 17:09:58.683 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-30 17:09:58.806 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 17:09:58.806 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 17:09:58.806 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 17:09:58.806 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 17:09:58.806 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 17:09:58.806 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-30 17:09:58.807 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 17:09:58.936 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-30 17:09:58.938 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-30 17:09:58.939 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-30 17:09:58.942 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1680167398941 with initial instances count: 0
2023-03-30 17:09:58.945 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application AUTH-CENTER with eureka with status UP
2023-03-30 17:09:58.946 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1680167398946, current=UP, previous=STARTING]
2023-03-30 17:09:58.948 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001: registering service...
2023-03-30 17:09:58.959 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2023-03-30 17:09:58.983 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8001 (http) with context path ''
2023-03-30 17:09:58.984 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2023-03-30 17:09:59.012 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_AUTH-CENTER/localhost:auth-center:8001 - registration status: 204
2023-03-30 17:10:00.154 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-03-30 17:10:00.156 [main] INFO  center.misaki.device.userApp - Started userApp in 18.154 seconds (JVM running for 18.94)
2023-03-30 17:10:00.196 [RMI TCP Connection(3)-172.26.32.192] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-30 17:10:00.196 [RMI TCP Connection(3)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-30 17:10:00.206 [RMI TCP Connection(3)-172.26.32.192] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-03-30 17:10:00.518 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-03-30 17:10:00.519 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-03-30 17:10:10.831 [boundedElastic-1] WARN  o.s.b.actuate.redis.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 10.0.12.2:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:952)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:429)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:94)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:85)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:225)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 10.0.12.2:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 14 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /10.0.12.2:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-03-30 17:10:28.939 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-30 17:10:28.939 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-30 17:10:28.940 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-30 17:10:28.940 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-30 17:10:28.940 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-30 17:10:28.940 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2023-03-30 17:10:28.940 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-30 17:10:28.977 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
